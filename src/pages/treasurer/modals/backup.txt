{
  /**
   * Expanded information or edit expenses modal
   *
   */
}
{
  editModal && selectedRow && (
    <div className="fixed inset-0 flex items-center justify-center bg-black/50 z-50">
      <div className="bg-white rounded-2xl shadow-xl w-11/12 max-w-md p-6">
        <h2 className="text-2xl font-bold text-gray-800 mb-6">
          Expenses Information
        </h2>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-700">
          <div>
            <p className="text-gray-500">Transaction id</p>
            <p className="font-medium text-gray-900">
              {selectedRow.transaction_id || "Not Provided"}
            </p>
          </div>

          <div>
            <p className="text-gray-500">Type</p>
            <p className="font-medium text-gray-900">
              {selectedRow.type || "Not Provided"}
            </p>
          </div>

          <div>
            <p className="text-gray-500">Category</p>
            <p className="font-medium text-gray-900">
              {selectedRow.category || "Not Provided"}
            </p>
          </div>

          <div>
            <p className="text-gray-500">Description</p>
            <p className="font-medium text-gray-900">
              {selectedRow.description || "Not Provided"}
            </p>
          </div>

          <div>
            <p className="text-gray-500">Amount</p>
            <p className="font-medium text-gray-900">
              â‚± {selectedRow.amount?.toLocaleString() || "0"}
            </p>
          </div>

          <div>
            <p className="text-gray-500">Transaction Date</p>
            <p className="font-medium text-gray-900">
              {selectedRow.transaction_date
                ? new Date(selectedRow.transaction_date).toLocaleDateString()
                : "Not Provided"}
            </p>
          </div>
        </div>

        <div className="mt-6 flex justify-start">
          <button
            onClick={() => setEditModal(false)}
            className="px-4 py-2 bg-gray-700 hover:bg-gray-800 text-white rounded-lg transition-colors"
          >
            Close
          </button>
        </div>
      </div>
    </div>
  );
}
{
  /**
   * Add expenses transaction modal
   *
   *
   */
}

{
  addModal && (
    <div className="fixed inset-0 flex items-center justify-center bg-black/50 z-50">
      {/* Modal container with animation */}
      <div className="bg-white rounded-2xl shadow-2xl w-11/12 max-w-md p-6 transform transition-all scale-100 animate-fadeIn">
        {/* Header */}
        <h2 className="text-2xl font-bold text-gray-800 mb-6">
          Add Transaction
        </h2>

        <form onSubmit={handleSubmit} className="space-y-4">
          {/* Loop through the array of hardcoded fields */}
          {fields.map(({ label, name, type, options }) => (
            <div key={name} className="form-control w-full">
              <label htmlFor={name} className="label mb-1">
                <span className="label-text font-medium text-gray-700">
                  {label}
                </span>
              </label>

              {type === "select" ? (
                <select
                  id={name}
                  name={name}
                  value={formData[name] || ""}
                  onChange={handleChange}
                  className="select select-bordered w-full"
                  required
                >
                  <option value="">-- Select {label} --</option>
                  {options?.map((opt) => (
                    <option key={opt} value={opt}>
                      {opt}
                    </option>
                  ))}
                </select>
              ) : (
                <input
                  id={name}
                  type={type}
                  name={name}
                  value={formData[name] || ""}
                  onChange={handleChange}
                  className="input input-bordered w-full"
                  required
                />
              )}
            </div>
          ))}

          {/* Footer buttons */}
          <div className="flex justify-between gap-3 pt-4 ">
            <button
              type="button"
              className="btn"
              onClick={() => setAddModal(false)}
            >
              Back
            </button>
            <button type="submit" className="btn btn-success px-8">
              Submit
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
